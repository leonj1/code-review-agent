# Dockerfile for running tests in an isolated environment
FROM python:3.11-slim

# Set working directory
WORKDIR /app

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies (if needed)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    git \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements files first (for better layer caching)
COPY requirements.txt requirements-test.txt ./

# Install Python dependencies
RUN pip install --upgrade pip && \
    pip install -r requirements.txt && \
    pip install -r requirements-test.txt

# Copy source code and tests
COPY src/ ./src/
COPY tests/ ./tests/
COPY examples/ ./examples/

# Create .env file with dummy values for tests (if needed)
RUN echo "# Dummy .env for testing" > .env

# Set PYTHONPATH to include source directory
ENV PYTHONPATH=/app/src:$PYTHONPATH

# Run tests with verbose output and coverage
CMD ["pytest", "-v", "tests/", "--cov=src", "--cov-report=term-missing"]

# Alternative: To run all tests (requires cli_tools.py), use:
# CMD ["pytest", "-v", "--cov=.", "--cov-report=term-missing", "--cov-report=html"]

# Health check: Verify pytest is installed
HEALTHCHECK --interval=30s --timeout=3s \
    CMD python -c "import pytest" || exit 1
